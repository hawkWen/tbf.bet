"use strict";var KTWizard5=function(){var t,e,i,r=[];return{init:function(){t=KTUtil.getById("kt_wizard"),e=KTUtil.getById("kt_wizard_form"),(i=new KTWizard(t,{startStep:1,clickableSteps:!0})).on("beforeNext",function(t){i.stop(),r[t.getStep()-1].validate().then(function(t){"Valid"==t?(i.goNext(),KTUtil.scrollTop()):Swal.fire({text:"Sorry, looks like there are some errors detected, please try again.",icon:"error",buttonsStyling:!1,confirmButtonText:"Ok, got it!",customClass:{confirmButton:"btn font-weight-bold btn-light"}}).then(function(){KTUtil.scrollTop()})})}),i.on("change",function(t){KTUtil.scrollTop()}),r.push(FormValidation.formValidation(e,{fields:{firstname:{validators:{notEmpty:{message:"First name is required"}}},lastname:{validators:{notEmpty:{message:"Last name is required"}}},phone:{validators:{notEmpty:{message:"Phone is required"}}}},plugins:{trigger:new FormValidation.plugins.Trigger,bootstrap:new FormValidation.plugins.Bootstrap}})),r.push(FormValidation.formValidation(e,{fields:{address1:{validators:{notEmpty:{message:"Address is required"}}},address2:{validators:{notEmpty:{message:"Address is required"}}},postcode:{validators:{notEmpty:{message:"Postcode is required"}}},city:{validators:{notEmpty:{message:"City is required"}}},state:{validators:{notEmpty:{message:"State is required"}}},country:{validators:{notEmpty:{message:"Country is required"}}}},plugins:{trigger:new FormValidation.plugins.Trigger,bootstrap:new FormValidation.plugins.Bootstrap}}))}}}();jQuery(document).ready(function(){KTWizard5.init()});